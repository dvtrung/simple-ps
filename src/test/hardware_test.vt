`timescale 1 ns/ 1 ps
`include "./helper/assert.vt"
`include "../hardware.v"
`include "../modules/inp.v"
`include "../modules/out.v"
`include "../modules/controller.v"
`include "../modules/alu_shifter.v"
`include "../modules/processor.v"
`include "../modules/register.v"
`include "../modules/seg7.v"

module hardware_test();
  reg clock, reset;

  wire res;
  wire [15:0] inp;
  wire [7:0] seg_sel, oled;
  
  wire [7:0] led0, led1, led2, led3, led4, led5, led6, led7;
  
  hardware hardware_(
    .clock(clock), .n_reset(reset),
    .inp(inp),
    .seg_sel(seg_sel), .oled(oled),
    .led0(led0), .led1(led1), .led2(led2), .led3(led3), 
    .led4(led4), .led5(led5), .led6(led6), .led7(led7)
  );
  
  wire [15:0] outval1_0 = hardware_.out_.arr_outval1[0];
  wire [15:0] outval1_1 = hardware_.out_.arr_outval1[1];
  wire [15:0] outval1_2 = hardware_.out_.arr_outval1[2];
  wire [15:0] outval1_3 = hardware_.out_.arr_outval1[3];
  wire [15:0] outval1_4 = hardware_.out_.arr_outval1[4];
  wire [15:0] outval1_5 = hardware_.out_.arr_outval1[5];
  wire [15:0] outval1_6 = hardware_.out_.arr_outval1[6];
  wire [15:0] outval1_7 = hardware_.out_.arr_outval1[7];

  wire [15:0] outval2_0 = hardware_.out_.arr_outval2[0];
  wire [15:0] outval2_1 = hardware_.out_.arr_outval2[1];
  wire [15:0] outval2_2 = hardware_.out_.arr_outval2[2];
  wire [15:0] outval2_3 = hardware_.out_.arr_outval2[3];
  wire [15:0] outval2_4 = hardware_.out_.arr_outval2[4];
  wire [15:0] outval2_5 = hardware_.out_.arr_outval2[5];
  wire [15:0] outval2_6 = hardware_.out_.arr_outval2[6];
  wire [15:0] outval2_7 = hardware_.out_.arr_outval2[7];

  wire [15:0] outsel2 = hardware_.out_.outsel2;
  wire outdisplay_flag1_ = hardware_.out_.outdisplay_flag1_;
  wire outdisplay_flag2_ = hardware_.out_.outdisplay_flag2_;
  
  initial begin
    clock = 0;
    reset = 1;
    #30
    reset = 0;
    #30
    reset = 1;
    #50000
    $display("TEST FINSHED in %m");
    $finish();
  end
  
  always begin
    #10
    clock <= ~clock;
  end
endmodule

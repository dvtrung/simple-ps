WIDTH=16;
DEPTH=4096;
ADDRESS_RADIX=UNS;
DATA_RADIX=BIN;
CONTENT BEGIN
	[0..4095] : 0;

-- $0 stack count :0
-- left 0..15 :1
-- right 16..31 :2
	0:	1000000000000000; -- li 0 0
	1:	1000000100000100; -- li 1 4
	2:	1100000110001000; -- sll 1 8
-- addi 2 1 :6
-- $2 = 1024 :7
	3:	0100000100000000; -- st 1 0 0
--
	4:	1000001000001000; -- li 2 8
	5:	1100001010001000; -- sll 2 8
--addi 2 9 :12
	6:	1000101011111111; -- addi 2 -1
	7:	0100001010000000; -- st 2 128 0
--
--:bubble_sort
	8:	1100101101100000; -- mov 3 1
	9:	1000011100000000; -- li 7 0
	10:	1000000000000000; -- li 0 0
--
-- r0: swapped?, r3: i :21
--:bbs_loop
	11:	1101110001100000; -- mov 4 3
	12:	0010010100000000; -- ld 5 0 4
	13:	1000101100000001; -- addi 3 1
	14:	0001111000000000; -- ld 6 0 3
	15:	1101001101010000; -- cmp 3 2
	16:	1011100000000101; -- be :end_bubble
	17:	1111010101010000; -- cmp 5 6
	18:	1011101011111000; -- ble :bbs_loop
	19:	1000000000000001; -- li 0 1
	20:	0101110100000000; -- st 5 0 3
	21:	0110011000000000; -- st 6 0 4
--:end_bubble
--
	22:	1111100001010000; -- cmp 0 7
	23:	1011100000111100; -- be :end
--
	24:	1000000000000001; -- li 0 1
--
--:partition
--
-- if r0 < 0 end :43
	25:	1000011100000000; -- li 7 0
	26:	1111100001010000; -- cmp 0 7
	27:	1011100000111000; -- be :end
--
	28:	1000100011111111; -- addi 0 -1
-- $1: left, $2: right :49
	29:	0000000100000000; -- ld 1 0 0
	30:	0000001010000000; -- ld 2 128 0
--
-- if left >= right :53
	31:	1100101001010000; -- cmp 2 1
	32:	1011101011111000; -- ble :partition
--
-- $4 left value: $r4 = left + 1 :57
-- $5 right value: $r5 = right :58
	33:	1100110001100000; -- mov 4 1
	34:	1000110000000001; -- addi 4 1
	35:	1101010001010000; -- cmp 4 2
	36:	1011101100000111; -- bne :choose_pivot
	37:	0000111000000000; -- ld 6 0 1
	38:	0001011100000000; -- ld 7 0 2
	39:	1111111001010000; -- cmp 6 7
	40:	1011100111110000; -- blt :partition
	41:	0101011000000000; -- st 6 0 2
	42:	0100111100000000; -- st 7 0 1
	43:	1010000011101101; -- b 0 :partition
--
--:choose_pivot
	44:	1101010101100000; -- mov 5 2
--
-- $3 pivot value: $r3 = a[left] :74
-- r6: pivot, r3 = a[pivot], r5 = a[left] :75
	45:	1101011001100000; -- mov 6 2
	46:	1100111000010000; -- sub 6 1
	47:	1100011010100001; -- srl 6 1
	48:	1100111000000000; -- add 6 1
-- swap a[pivot] and a[left] :80
	49:	0011001100000000; -- ld 3 0 6
	50:	0000111100000000; -- ld 7 0 1
	51:	0100101100000000; -- st 3 0 1
	52:	0111011100000000; -- st 7 0 6
--
-- $r6 = a[left + 1] :86
-- $r4: i :87
--:find_left
	53:	0010011000000000; -- ld 6 0 4
-- if a[i] > pivot :90
	54:	1111001101010000; -- cmp 3 6
	55:	1011100100000100; -- blt :find_right
-- if i > j :93
	56:	1110010101010000; -- cmp 5 4
	57:	1011100100010000; -- blt :end_partition
	58:	1000110000000001; -- addi 4 1
	59:	1010000011111001; -- b 0 :find_left
--
--:find_right
	60:	0010111100000000; -- ld 7 0 5
-- if a[j] < pivot :101
	61:	1101111101010000; -- cmp 7 3
	62:	1011100100000100; -- blt :swap
-- if j < left :104
	63:	1100110101010000; -- cmp 5 1
	64:	1011100000000010; -- be :swap
	65:	1000110111111111; -- addi 5 -1
	66:	1010000011111001; -- b 0 :find_right
--
--:swap
-- swap a[$r4] with a[$r5] :111
-- $r5: j :112
	67:	1110010101010000; -- cmp 5 4
	68:	1011101000000101; -- ble :end_partition
	69:	0110111000000000; -- st 6 0 5
	70:	0110011100000000; -- st 7 0 4
	71:	1000110000000001; -- addi 4 1
	72:	1000110111111111; -- addi 5 -1
	73:	1010000011101011; -- b 0 :find_left
--
--:end_partition
--
	74:	0100111100000000; -- st 7 0 1
	75:	0110101100000000; -- st 3 0 5
--
-- recursion (add to stack) :126
--
	76:	1000110111111111; -- addi 5 -1
	77:	0100000100000000; -- st 1 0 0
	78:	0100010110000000; -- st 5 128 0
	79:	1000100000000001; -- addi 0 1
--
	80:	0100010000000000; -- st 4 0 0
	81:	0100001010000000; -- st 2 128 0
	82:	1000100000000001; -- addi 0 1
--
	83:	1010000011000101; -- b 0 :partition
--
--:end
--
-- output :141
	84:	1000001000000100; -- li 2 4
	85:	1100001010001000; -- sll 2 8
--
	86:	0001011000000000; -- ld 6 0 2
	87:	1100001010000001; -- sll 2 1
	88:	1000101011111111; -- addi 2 -1
	89:	0001011100000000; -- ld 7 0 2
	90:	1111011111010000; -- out 6 7 0
--
--b 0 :printing :151
--
	91:	1100000011110000; -- hlt
END;

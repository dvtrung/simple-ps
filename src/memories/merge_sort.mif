WIDTH=16;
DEPTH=4096;
ADDRESS_RADIX=UNS;
DATA_RADIX=BIN;
CONTENT BEGIN
	[0..4095] : 0;

-- pointer s :0
	0:	1000000000100000; -- li 0 32
--
-- pointer l :3
	1:	1000000100100000; -- li 1 32
--
-- pointer r :6
	2:	1000001000100000; -- li 2 32
--
-- pointer w :9
	3:	1000001101000000; -- li 3 64
--
-- block_size :12
	4:	1000010000000001; -- li 4 1
--
	5:	1000010100000000; -- li 5 0
-- value l :16
--
	6:	1000011000000000; -- li 6 0
-- value r :19
--
	7:	1000011100000000; -- li 7 0
-- junk :22
--
--:start
--
-- s = l = r = 32; w = 64 :26
--
	8:	1000000000100000; -- li 0 32
	9:	1000000100100000; -- li 1 32
	10:	1000001000100000; -- li 2 32
	11:	1000001101000000; -- li 3 64
--
-- r += size :33
	12:	1110001000000000; -- add 2 4
--
--:compare
--
-- *l, *r :38
	13:	0000110100000000; -- ld 5 0 1
	14:	0001011000000000; -- ld 6 0 2
	15:	0000000000000000; -- nop
	16:	0000000000000000; -- nop
--
-- l == s + size; :l_max :44
	17:	1100011101100000; -- mov 7 0
	18:	1110011100000000; -- add 7 4
	19:	1111100101010000; -- cmp 1 7
	20:	1011100000001110; -- be :l_max
	21:	0000000000000000; -- nop
	22:	0000000000000000; -- nop
--
-- r == s + size + size; :use_l :52
	23:	1110011100000000; -- add 7 4
	24:	1111101001010000; -- cmp 2 7
	25:	1011100000001110; -- be :use_l
	26:	0000000000000000; -- nop
	27:	0000000000000000; -- nop
--
-- l < r; :use_l :59
	28:	1111010101010000; -- cmp 5 6
	29:	1011101000001010; -- ble :use_l
	30:	0000000000000000; -- nop
	31:	0000000000000000; -- nop
--
-- :use_r :65
	32:	1010000000001110; -- b 0 :use_r
	33:	0000000000000000; -- nop
	34:	0000000000000000; -- nop
--
--:l_max
--
-- r == s + size + size; :compare_end :72
	35:	1110011100000000; -- add 7 4
	36:	1111101001010000; -- cmp 2 7
	37:	1011100000010000; -- be :compare_end
	38:	0000000000000000; -- nop
	39:	0000000000000000; -- nop
--
--:use_l
--
-- *w = *l :81
	40:	0101110100000000; -- st 5 0 3
--
-- w++, l++ :84
	41:	1000011100000001; -- li 7 1
	42:	1111101100000000; -- add 3 7
	43:	1111100100000000; -- add 1 7
--
-- :compare :89
	44:	1010000011100000; -- b 0 :compare
	45:	0000000000000000; -- nop
	46:	0000000000000000; -- nop
--
--:use_r
--
-- *r = *l :96
	47:	0101111000000000; -- st 6 0 3
--
-- w++, r++ :99
	48:	1000011100000001; -- li 7 1
	49:	1111101100000000; -- add 3 7
	50:	1111101000000000; -- add 2 7
--
	51:	1010000011011001; -- b 0 :compare
	52:	0000000000000000; -- nop
	53:	0000000000000000; -- nop
--
--:compare_end
--
-- s = r :110
	54:	1101000001100000; -- mov 0 2
--
-- s == 64; :next :113
	55:	1000011101000000; -- li 7 64
	56:	1111100001010000; -- cmp 0 7
	57:	1011100000000111; -- be :next
	58:	0000000000000000; -- nop
	59:	0000000000000000; -- nop
--
-- l = s ; r += size; :compare :120
	60:	1100000101100000; -- mov 1 0
	61:	1110001000000000; -- add 2 4
	62:	1010000011001110; -- b 0 :compare
	63:	0000000000000000; -- nop
	64:	0000000000000000; -- nop
--
--:next
--
-- size <<= 1 :129
	65:	1100010010000001; -- sll 4 1
--
-- s = 32, w = 64 :132
	66:	1000000000100000; -- li 0 32
	67:	1000001101000000; -- li 3 64
--
--:moving
--
-- *s = *w :138
	68:	0001111100000000; -- ld 7 0 3
	69:	0000000000000000; -- nop
	70:	0000000000000000; -- nop
	71:	0100011100000000; -- st 7 0 0
--
	72:	1100011111010000; -- out 0 7 0
--
-- s++; w++ :146
	73:	1000011100000001; -- li 7 1
	74:	1111100000000000; -- add 0 7
	75:	1111101100000000; -- add 3 7
--
-- s != 64; :moving :151
	76:	1000011101000000; -- li 7 64
	77:	1111100001010000; -- cmp 0 7
	78:	1011101111110101; -- bne :moving
	79:	0000000000000000; -- nop
	80:	0000000000000000; -- nop
--
-- size != 1 << 5; :start :158
	81:	1000011100000001; -- li 7 1
	82:	1100011110000101; -- sll 7 5
	83:	1111110001010000; -- cmp 4 7
	84:	1011101110110011; -- bne :start
	85:	0000000000000000; -- nop
	86:	0000000000000000; -- nop
--
	87:	1010000000000010; -- b 0 :end
	88:	0000000000000000; -- nop
	89:	0000000000000000; -- nop
--
--:end
--
	90:	1000011110101010; -- li 7 170
	91:	1111111111010111; -- out 7 7 7
--
	92:	1010000011111101; -- b 0 :end
END;

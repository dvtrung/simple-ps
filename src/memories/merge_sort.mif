WIDTH=16;
DEPTH=4096;
ADDRESS_RADIX=UNS;
DATA_RADIX=BIN;
CONTENT BEGIN
	[0..4095] : 0;

-- pointer s :0
	0:	1000000000100000; -- li 0 32
--
-- pointer l :3
	1:	1000000100100000; -- li 1 32
--
-- pointer r :6
	2:	1000001000100000; -- li 2 32
--
-- pointer w :9
	3:	1000001100000000; -- li 3 0
--
-- block_size :12
	4:	1000010000000001; -- li 4 1
--
	5:	1000010100000000; -- li 5 0
-- value l :16
--
	6:	1000011000000000; -- li 6 0
-- value r :19
--
	7:	1000011100000000; -- li 7 0
-- junk :22
--
--:start
--
-- r += size :26
	8:	1110001000000000; -- add 2 4
--
--:compare
--
-- *l, *r :31
	9:	0000110100000000; -- ld 5 0 1
	10:	0001011000000000; -- ld 6 0 2
--
-- nop :35
-- nop :36
--
-- l == s + size; :l_max :38
	11:	1100011101100000; -- mov 7 0
	12:	1110011100000000; -- add 7 4
	13:	1111100101010000; -- cmp 1 7
	14:	1011100000000110; -- be :l_max
--
-- r == s + size + size; :use_l :44
	15:	1110011100000000; -- add 7 4
	16:	1111101001010000; -- cmp 2 7
	17:	1011100000000110; -- be :use_l
--
-- l < r; :use_l :49
	18:	1111010101010000; -- cmp 5 6
	19:	1011101000000100; -- ble :use_l
--
-- :use_r :53
	20:	1010000000001000; -- b 0 :use_r
--
--:l_max
--
-- r == s + size + size; :compare_end :58
	21:	1110011100000000; -- add 7 4
	22:	1111101001010000; -- cmp 2 7
	23:	1011100000001010; -- be :compare_end
--
--:use_l
--
-- *w = *l :65
	24:	0101110100000000; -- st 5 0 3
--
-- w++, l++ :68
	25:	1000011100000001; -- li 7 1
	26:	1111101100000000; -- add 3 7
	27:	1111100100000000; -- add 1 7
--
-- :compare :73
	28:	1010000011101100; -- b 0 :compare
--
--:use_r
--
-- *r = *l :78
	29:	0101111000000000; -- st 6 0 3
--
-- w++, r++ :81
	30:	1000011100000001; -- li 7 1
	31:	1111101100000000; -- add 3 7
	32:	1111101000000000; -- add 2 7
--
	33:	1010000011100111; -- b 0 :compare
--
--:compare_end
--
-- s = r :90
	34:	1101000001100000; -- mov 0 2
--
-- s == 64; :next_back :93
	35:	1000011101000000; -- li 7 64
	36:	1111100001010000; -- cmp 0 7
	37:	1011100000000110; -- be :next_back
--
-- s == 32; :next_foward :98
	38:	1000011100100000; -- li 7 32
	39:	1111100001010000; -- cmp 0 7
	40:	1011100000001101; -- be :next_foward
--
-- l = s ; r += size; :compare :103
	41:	1100000101100000; -- mov 1 0
	42:	1110001000000000; -- add 2 4
	43:	1010000011011101; -- b 0 :compare
--
--:next_back
--
-- size <<= 1 :110
	44:	1100010010000001; -- sll 4 1
--
-- s = l = r = 0; w = 32 :113
--
	45:	1000000000000000; -- li 0 0
	46:	1000000100000000; -- li 1 0
	47:	1000001000000000; -- li 2 0
	48:	1000001100100000; -- li 3 32
--
-- size == 1 << 5; :final :120
	49:	1000011100000001; -- li 7 1
	50:	1100011110000101; -- sll 7 5
	51:	1111110001010000; -- cmp 4 7
	52:	1011100000000111; -- be :final
--
-- :start :126
	53:	1010000011010010; -- b 0 :start
--
--:next_foward
--
-- size <<= 1 :131
	54:	1100010010000001; -- sll 4 1
--
-- s = l = r = 32; w = 0 :134
--
	55:	1000000000100000; -- li 0 32
	56:	1000000100100000; -- li 1 32
	57:	1000001000100000; -- li 2 32
	58:	1000001100000000; -- li 3 0
--
-- :start :141
	59:	1010000011001100; -- b 0 :start
--
--:final
--
-- s = 32, w = 0 :146
--
	60:	1000000000100000; -- li 0 32
	61:	1000001100000000; -- li 3 0
--
--:moving
--
-- *s = *w :153
	62:	0001111100000000; -- ld 7 0 3
	63:	1110000011101111; -- nop
	64:	1110000011101111; -- nop
	65:	0100011100000000; -- st 7 0 0
--
	66:	1100011111010000; -- out 0 7 0
--
-- s++; w++ :161
	67:	1000011100000001; -- li 7 1
	68:	1111100000000000; -- add 0 7
	69:	1111101100000000; -- add 3 7
--
-- s == 64; :moving :166
	70:	1000011101000000; -- li 7 64
	71:	1111100001010000; -- cmp 0 7
	72:	1011101111110101; -- bne :moving
--
-- :end :171
	73:	1010000000000000; -- b 0 :end
--
--:end
--
	74:	1000011111011110; -- li 7 222
	75:	1100011110001000; -- sll 7 8
	76:	1000011010101101; -- li 6 173
	77:	1100011010001000; -- sll 6 8
	78:	1100011010101000; -- srl 6 8
	79:	1111111000000000; -- add 6 7
	80:	1000011110111110; -- li 7 190
	81:	1100011110001000; -- sll 7 8
	82:	1000010110101111; -- li 5 175
	83:	1100010110001000; -- sll 5 8
	84:	1100010110101000; -- srl 5 8
	85:	1111110100000000; -- add 5 7
	86:	1111011111010110; -- out 6 7 6
	87:	1100000011110000; -- hlt
END;

WIDTH=16;
DEPTH=4096;
ADDRESS_RADIX=UNS;
DATA_RADIX=BIN;
CONTENT BEGIN
	[0..4095] : 0;

-- pointer s = 1024 :0
	0:	1000000000000001; -- li 0 1
	1:	1100000010001010; -- sll 0 10
--
-- pointer l = 1024 :4
	2:	1100000101100000; -- mov 1 0
--
-- pointer r = 1024 :7
	3:	1100001001100000; -- mov 2 0
--
-- pointer w = 0 :10
	4:	1000001100000000; -- li 3 0
--
-- block_size = 1 :13
	5:	1000010000000001; -- li 4 1
--
-- value l = 0 :16
	6:	1000010100000000; -- li 5 0
--
-- value r = 0 :19
	7:	1000011000000000; -- li 6 0
--
-- junk :22
	8:	1000011100000000; -- li 7 0
--
--:start
--
-- r += size :27
	9:	1110001000000000; -- add 2 4
--
--:compare
--
-- *l, *r :32
	10:	0000110100000000; -- ld 5 0 1
	11:	0001011000000000; -- ld 6 0 2
--
-- nop :36
-- nop :37
--
-- l == s + size; :l_max :39
	12:	1100011101100000; -- mov 7 0
	13:	1110011100000000; -- add 7 4
	14:	1111100101010000; -- cmp 1 7
	15:	1011100000000110; -- be :l_max
--
-- r == s + size + size; :use_l :45
	16:	1110011100000000; -- add 7 4
	17:	1111101001010000; -- cmp 2 7
	18:	1011100000001011; -- be :use_l
--
-- l < r; :use_l :50
	19:	1111010101010000; -- cmp 5 6
	20:	1011101000001001; -- ble :use_l
--
-- :use_r :54
	21:	1010000000000011; -- b 0 :use_r
--
--:l_max
--
-- r == s + size + size; :compare_end :59
	22:	1110011100000000; -- add 7 4
	23:	1111101001010000; -- cmp 2 7
	24:	1011100000001010; -- be :compare_end
--
-- through from l_max :64
--:use_r
--
-- *r = *l :67
	25:	0101111000000000; -- st 6 0 3
--
-- w++, r++ :70
	26:	1000011100000001; -- li 7 1
	27:	1111101100000000; -- add 3 7
	28:	1111101000000000; -- add 2 7
--
	29:	1010000011101100; -- b 0 :compare
--
--:use_l
--
-- *w = *l :79
	30:	0101110100000000; -- st 5 0 3
--
-- w++, l++ :82
	31:	1000011100000001; -- li 7 1
	32:	1111101100000000; -- add 3 7
	33:	1111100100000000; -- add 1 7
--
-- :compare :87
	34:	1010000011100111; -- b 0 :compare
--
--:compare_end
--
-- s = r :92
	35:	1101000001100000; -- mov 0 2
--
-- s == 2048; :next_back :95
	36:	1000011100000001; -- li 7 1
	37:	1100011110001011; -- sll 7 11
	38:	1111100001010000; -- cmp 0 7
	39:	1011100000000111; -- be :next_back
--
-- s == 1024; :next_foward :101
	40:	1000011100000001; -- li 7 1
	41:	1100011110001010; -- sll 7 10
	42:	1111100001010000; -- cmp 0 7
	43:	1011100000001010; -- be :next_foward
--
-- l = s ; r += size; :compare :107
	44:	1100000101100000; -- mov 1 0
	45:	1110001000000000; -- add 2 4
	46:	1010000011011011; -- b 0 :compare
--
--:next_back
--
-- size <<= 1 :114
	47:	1100010010000001; -- sll 4 1
--
-- s = l = r = 0; w = 1024 :117
--
	48:	1000000000000000; -- li 0 0
	49:	1000000100000000; -- li 1 0
	50:	1000001000000000; -- li 2 0
	51:	1000001100000001; -- li 3 1
	52:	1100001110001010; -- sll 3 10
--
-- :start :125
	53:	1010000011010011; -- b 0 :start
--
--:next_foward
--
-- size <<= 1 :130
	54:	1100010010000001; -- sll 4 1
--
-- size == 1 << 10; :final :133
	55:	1000011100000001; -- li 7 1
	56:	1100011110001010; -- sll 7 10
	57:	1111110001010000; -- cmp 4 7
	58:	1011100000000110; -- be :final
--
-- s = l = r = 1024; w = 0 :139
--
	59:	1000000000000001; -- li 0 1
	60:	1100000010001010; -- sll 0 10
	61:	1100000101100000; -- mov 1 0
	62:	1100001001100000; -- mov 2 0
	63:	1000001100000000; -- li 3 0
--
-- :start :147
	64:	1010000011001000; -- b 0 :start
--
--:final
--
	65:	1000011111011110; -- li 7 222
	66:	1100011110001000; -- sll 7 8
	67:	1000011010101101; -- li 6 173
	68:	1100011010001000; -- sll 6 8
	69:	1100011010101000; -- srl 6 8
	70:	1111111000000000; -- add 6 7
	71:	1000011110111110; -- li 7 190
	72:	1100011110001000; -- sll 7 8
	73:	1000010110101111; -- li 5 175
	74:	1100010110001000; -- sll 5 8
	75:	1100010110101000; -- srl 5 8
	76:	1111110100000000; -- add 5 7
	77:	1110000011101111; -- nop
	78:	1110000011101111; -- nop
	79:	1111011111010110; -- out 6 7 6
	80:	1100000011110000; -- hlt
END;

WIDTH=16;
DEPTH=4096;
ADDRESS_RADIX=UNS;
DATA_RADIX=BIN;
CONTENT BEGIN
	[0..4095] : 0;

-- pointer s :0
	0:	1000000000100000; -- li 0 32
--
-- pointer l :3
	1:	1000000100100000; -- li 1 32
--
-- pointer r :6
	2:	1000001000100000; -- li 2 32
--
-- pointer w :9
	3:	1000001100000000; -- li 3 0
--
-- block_size :12
	4:	1000010000000001; -- li 4 1
--
	5:	1000010100000000; -- li 5 0
-- value l :16
--
	6:	1000011000000000; -- li 6 0
-- value r :19
--
	7:	1000011100000000; -- li 7 0
-- junk :22
--
--:start
--
-- r += size :26
	8:	1110001000000000; -- add 2 4
--
--:compare
--
-- *l, *r :31
	9:	0000110100000000; -- ld 5 0 1
	10:	0001011000000000; -- ld 6 0 2
	11:	0000000000000000; -- nop
	12:	0000000000000000; -- nop
--
-- l == s + size; :l_max :37
	13:	1100011101100000; -- mov 7 0
	14:	1110011100000000; -- add 7 4
	15:	1111100101010000; -- cmp 1 7
	16:	1011100000001110; -- be :l_max
	17:	0000000000000000; -- nop
	18:	0000000000000000; -- nop
--
-- r == s + size + size; :use_l :45
	19:	1110011100000000; -- add 7 4
	20:	1111101001010000; -- cmp 2 7
	21:	1011100000001110; -- be :use_l
	22:	0000000000000000; -- nop
	23:	0000000000000000; -- nop
--
-- l < r; :use_l :52
	24:	1111010101010000; -- cmp 5 6
	25:	1011101000001010; -- ble :use_l
	26:	0000000000000000; -- nop
	27:	0000000000000000; -- nop
--
-- :use_r :58
	28:	1010000000001110; -- b 0 :use_r
	29:	0000000000000000; -- nop
	30:	0000000000000000; -- nop
--
--:l_max
--
-- r == s + size + size; :compare_end :65
	31:	1110011100000000; -- add 7 4
	32:	1111101001010000; -- cmp 2 7
	33:	1011100000010000; -- be :compare_end
	34:	0000000000000000; -- nop
	35:	0000000000000000; -- nop
--
--:use_l
--
-- *w = *l :74
	36:	0101110100000000; -- st 5 0 3
--
-- w++, l++ :77
	37:	1000011100000001; -- li 7 1
	38:	1111101100000000; -- add 3 7
	39:	1111100100000000; -- add 1 7
--
-- :compare :82
	40:	1010000011100000; -- b 0 :compare
	41:	0000000000000000; -- nop
	42:	0000000000000000; -- nop
--
--:use_r
--
-- *r = *l :89
	43:	0101111000000000; -- st 6 0 3
--
-- w++, r++ :92
	44:	1000011100000001; -- li 7 1
	45:	1111101100000000; -- add 3 7
	46:	1111101000000000; -- add 2 7
--
	47:	1010000011011001; -- b 0 :compare
	48:	0000000000000000; -- nop
	49:	0000000000000000; -- nop
--
--:compare_end
--
-- s = r :103
	50:	1101000001100000; -- mov 0 2
--
-- s == 64; :next_back :106
	51:	1000011101000000; -- li 7 64
	52:	1111100001010000; -- cmp 0 7
	53:	1011100000001101; -- be :next_back
	54:	0000000000000000; -- nop
	55:	0000000000000000; -- nop
--
-- s == 32; :next_foward :113
	56:	1000011100100000; -- li 7 32
	57:	1111100001010000; -- cmp 0 7
	58:	1011100000010110; -- be :next_foward
	59:	0000000000000000; -- nop
	60:	0000000000000000; -- nop
--
-- l = s ; r += size; :compare :120
	61:	1100000101100000; -- mov 1 0
	62:	1110001000000000; -- add 2 4
	63:	1010000011001001; -- b 0 :compare
	64:	0000000000000000; -- nop
	65:	0000000000000000; -- nop
--
	66:	1010000011000101; -- b 0 :start
--
--:next_back
--
-- size <<= 1 :131
	67:	1100010010000001; -- sll 4 1
--
-- s = l = r = 0; w = 32 :134
--
	68:	1000000000000000; -- li 0 0
	69:	1000000100000000; -- li 1 0
	70:	1000001000000000; -- li 2 0
	71:	1000001100100000; -- li 3 32
--
-- size == 1 << 5; :final :141
	72:	1000011100000001; -- li 7 1
	73:	1100011110000101; -- sll 7 5
	74:	1111110001010000; -- cmp 4 7
	75:	1011100000001101; -- be :final
	76:	0000000000000000; -- nop
	77:	0000000000000000; -- nop
--
-- :start :149
	78:	1010000010111001; -- b 0 :start
	79:	0000000000000000; -- nop
	80:	0000000000000000; -- nop
--
--:next_foward
--
-- size <<= 1 :156
	81:	1100010010000001; -- sll 4 1
--
-- s = l = r = 32; w = 0 :159
--
	82:	1000000000100000; -- li 0 32
	83:	1000000100100000; -- li 1 32
	84:	1000001000100000; -- li 2 32
	85:	1000001100000000; -- li 3 0
--
-- :start :166
	86:	1010000010110001; -- b 0 :start
	87:	0000000000000000; -- nop
	88:	0000000000000000; -- nop
--
--:final
--
-- s = 32, w = 0 :173
--
	89:	1000000000100000; -- li 0 32
	90:	1000001100000000; -- li 3 0
--
--:moving
--
-- *s = *w :180
	91:	0001111100000000; -- ld 7 0 3
	92:	0000000000000000; -- nop
	93:	0000000000000000; -- nop
	94:	0100011100000000; -- st 7 0 0
--
	95:	1100011111010000; -- out 0 7 0
--
-- s++; w++ :188
	96:	1000011100000001; -- li 7 1
	97:	1111100000000000; -- add 0 7
	98:	1111101100000000; -- add 3 7
--
-- s == 64; :moving :193
	99:	1000011101000000; -- li 7 64
	100:	1111100001010000; -- cmp 0 7
	101:	1011101111110101; -- bne :moving
	102:	0000000000000000; -- nop
	103:	0000000000000000; -- nop
--
--
	104:	1010000000000010; -- b 0 :end
	105:	0000000000000000; -- nop
	106:	0000000000000000; -- nop
--
--:end
--
	107:	1000011110101010; -- li 7 170
	108:	1111111111010111; -- out 7 7 7
--
	109:	1010000011111101; -- b 0 :end
END;

WIDTH=16;
DEPTH=4096;
ADDRESS_RADIX=UNS;
DATA_RADIX=BIN;
CONTENT BEGIN
	[0..4095] : 0;

--
	0:	1000000000000000; -- li 0 0
	1:	1100000011010000; -- out 0 0
	2:	1100000011010011; -- out 0 3
--
	3:	1100000011000000; -- in 0 0
	4:	1100000111000001; -- in 1 1
--
	5:	1100001001100000; -- mov 2 0
	6:	1100101000000000; -- add 2 1
	7:	1100001101100000; -- mov 3 0
	8:	1100101100010000; -- sub 3 1
	9:	1100000011010001; -- out 0 1
	10:	1100100011010010; -- out 1 2
	11:	1101000011010100; -- out 2 4
	12:	1101100011010101; -- out 3 5
--
	13:	1100001001100000; -- mov 2 0
	14:	1100001010000001; -- sll 2 1
	15:	1100001101100000; -- mov 3 0
	16:	1100001110100001; -- srl 3 1
	17:	1101000011011000; -- out 2 8
	18:	1101100011011001; -- out 3 9
--
	19:	1100001001100000; -- mov 2 0
	20:	1100001010010001; -- slr 2 1
	21:	1100001101100000; -- mov 3 0
	22:	1100001110110001; -- sra 3 1
	23:	1101000011011010; -- out 2 10
	24:	1101100011011011; -- out 3 11
--
	25:	1011000000000110; -- bal :mul
	26:	1110000011101111; -- nop
	27:	1011000000001100; -- bal :div
	28:	1110000011101111; -- nop
	29:	1101000011010110; -- out 2 6
	30:	1101100011010111; -- out 3 7
--
	31:	1100000011110000; -- hlt
--
--:mul
	32:	1000011100000000; -- li 7 0
	33:	1000001000000000; -- li 2 0
--:loop_mul
	34:	1100101000000000; -- add 2 1
	35:	1000111100000001; -- addi 7 1
	36:	1100011101010000; -- cmp 7 0
	37:	1011101111111100; -- bne :loop_mul
	38:	1110000011101111; -- nop
	39:	1010100000000000; -- bs
--
--:div
	40:	1110000011101111; -- nop
	41:	1000001100000000; -- li 3 0
	42:	1110000011101111; -- nop
	43:	1000011100000000; -- li 7 0
--:loop_div
	44:	1000101100000001; -- addi 3 1
	45:	1100111100000000; -- add 7 1
	46:	1100011101010000; -- cmp 7 0
	47:	1011101011111100; -- ble :loop_div
	48:	1000101111111111; -- addi 3 -1
	49:	1010100000000000; -- bs
END;
